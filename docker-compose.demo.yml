version: "3.7"

x-defaults:
  &defaults
  init: true
  tty: true
  networks:
    - rhombus-net

x-backend:
  &backend
  <<: *defaults
  build:
    context: .
    dockerfile: ./apps/backend/dev.Dockerfile
  restart: always
  environment:
    APP_ROOT_PASSWORD: password
    APP_MINIO_SERVER_HOST: storage
    APP_MINIO_SERVER_ACCESS_KEY: minio
    APP_MINIO_SERVER_ACCESS_SECRET_KEY: miniosecret
    APP_BROKER_HOST: task-broker
    APP_BROKER_USER: rhombus
    APP_BROKER_PASSWORD: password
    APP_BUCKET_NAME: rhombus
  volumes:
    - ./apps/backend:/app

services:
  backend:
    <<: *backend
    command: scripts/run_prod_server.sh
    depends_on:
      - db
      - storage
  workers:
    <<: *backend
    command: scripts/run_workers.sh
    depends_on:
      - db
      - storage
      - backend
      - task-broker
  web:
    <<: *defaults
    build:
      args:
        APP: web
        START_COMMAND: dev
      context: .
      dockerfile: apps/web/Dockerfile
    depends_on:
      - storage
      - backend
  db:
    <<: *defaults
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
  storage:
    <<: *defaults
    image: bitnami/minio
    restart: always
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
      MINIO_DEFAULT_BUCKETS: rhombus
    volumes:
      - storage-data:/data
  storage-configure:
    <<: *defaults
    build:
      context: ./configs
      dockerfile: ./mc.Dockerfile
    environment:
      MINIO_SERVER_HOST: storage
      MINIO_SERVER_ACCESS_KEY: minio
      MINIO_SERVER_ACCESS_SECRET_KEY: miniosecret
      WEBHOOK_URL: http://backend:8000/webhooks/minio/
    depends_on:
      - storage
  gateway:
    <<: *defaults
    image: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
      - backend
      - storage
      - sse-stream
  sse-stream:
    <<: *defaults
    image: fanout/pushpin
    restart: always
    volumes:
      - ./configs/routes:/etc/pushpin/routes
  task-broker:
    <<: *defaults
    image: bitnami/rabbitmq
    restart: always
    volumes:
      - rabbitmq_data:/bitnami/rabbitmq/mnesia
      - ./configs/rabbitmq.conf:/opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf
networks:
  rhombus-net:
    driver: bridge

volumes:
  db-data:
  storage-data:
  rabbitmq_data:

